#!/usr/bin/env bash
set -euo pipefail
source $HOME/.venv/gpu/bin/activate

output_folder="analysis"
analyses=("cumulative" "lifetime" "regression" "scatter")
time_scale='1.0'
fit_start='0'
fit_end=''
start_plane=0
file_each=0
mean_each=''
log_level='INFO'
scatter=0
bleach_frame=1
bleach_fix=26.57
bleach_vol=11.95

# show usage and exit
function show_usage () {
    echo "$(basename "$0") [-o FOLDER] [-x T_SCALE] [-s FIT_START] [-e FIT_END] [-l P_START] [-b (#|FIX|VOL)] [-m MEAN_EACH] [-E] [-L LOG] file [file ...]"
    exit 1
}

# parse options
while getopts "o:x:s:e:L:l:b:Em:" OPT;
do
    case "$OPT" in
    o) output_folder="$OPTARG" ;;
    x) time_scale="$OPTARG" ;;
    s) fit_start="$OPTARG" ;;
    e) fit_end="$OPTARG" ;;
    l) start_plane="$OPTARG" ;;
    b) bleach_frame="$OPTARG" ;;
    E) file_each=1 ;;
    m) mean_each="$OPTARG" ;;
    L) log_level="$OPTARG" ;;
    :) show_usage ;;
    \?) show_usage ;;
    esac
done
shift $((OPTIND - 1))

# find an image file if not specified
if [[ $# == 0 ]]; then
    readarray -t files < <(find . -maxdepth 1 -type f -iname '*_track.json')
else
    files=("$@")
fi

if [[ "${bleach_frame^^}" == "FIX" ]]; then
    bleach_frame=$bleach_fix
elif [[ "${bleach_frame^^}" == "VOL" ]]; then
    bleach_frame=$bleach_vol
fi

# process!
analyze () {
    input_files=("$@")
    for analysis in "${analyses[@]}"; do
        echo "**** ${analysis} ****"
        if [[ "$analysis" == 'lifetime' || "$analysis" == 'cumulative' ]]; then
            if [[ $fit_end == '' ]]; then
                fit_option="-s ${fit_start} -l ${start_plane}"
            else
                fit_option="-s ${fit_start} -e ${fit_end} -l ${start_plane}"
            fi
        elif [[ "$analysis" == 'scatter' ]]; then
            if [[ $mean_each != '' ]]; then
                fit_option="-m ${mean_each}"
            fi
        else
            fit_option=""
        fi

        if [[ "${#input_files[@]}" > 1 ]]; then
            output_graph="${output_folder}/Summary_${analysis}.png"
            output_txt="${output_folder}/Summary_${analysis}.txt"
            mmanalyze_lifetime.py -a "$analysis" -o "$output_txt" -g "$output_graph" \
                    -x "$time_scale" $fit_option -b "$bleach_frame" -L "$log_level" "${input_files[@]}"
        else
            stem="$(echo ${input_files[0]} | sed 's/\.json$//')"
            output_txt="${output_folder}/${stem}_${analysis}.txt"
            output_graph="${output_folder}/${stem}_${analysis}.png"
            mmanalyze_lifetime.py -a "$analysis" -o "$output_txt" -g "$output_graph" \
                    -x "$time_scale" $fit_option -b "$bleach_frame" -L "$log_level" "${input_files[0]}"
        fi

        echo "."
    done
}

mkdir -p "$output_folder"
if [[ $file_each == 1 ]]; then
    for file in "${files[@]}"; do
        echo "**** ${file} ****"
        analyze "$file"
    done
else
    analyze "${files[@]}"
fi
