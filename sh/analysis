#!/usr/bin/env bash
set -euo pipefail
source $HOME/.venv/gpu/bin/activate

output_folder="analysis"
time_scale='1.0'
fit_start='0'
analyses=("cumulative" "lifetime" "regression" "counting")
separate=0
log_level='INFO'

# show usage and exit
function show_usage () {
    echo "$(basename "$0") [-o OUTPUT_FOLDER] [-x TIME_SCALE] [-s FIT_START] [-p] [-L LOG] file [file ...]"
    exit 1
}

# parse options
while getopts "o:x:s:L:p" OPT;
do
    case "$OPT" in
    o) output_folder="$OPTARG" ;;
    x) time_scale="$OPTARG" ;;
    s) fit_start="$OPTARG" ;;
    p) separate=1 ;;
    L) log_level="$OPTARG" ;;
    :) show_usage ;;
    \?) show_usage ;;
    esac
done
shift $((OPTIND - 1))

# find an image file if not specified
if [ $# == 0 ]; then
    files=("$(find . -maxdepth 1 -iname '*_track.json' | head -n 1)")
else
    files=("$@")
fi

if [[ $separate == 1 ]]; then
    sep_option="-p"
else
    sep_option=""
fi

# process!
mkdir -p "$output_folder"
for analysis in "${analyses[@]}"; do
    echo "**** ${analysis} ****"
    stem="$(echo ${files[0]} | sed 's/\.json$//')"
    output_txt="${output_folder}/${stem}_${analysis}.txt"
    output_graph="${output_folder}/${stem}_${analysis}.png"

    mmanalyze_lifetime.py -a "$analysis" -o "$output_txt" -g "$output_graph" -x "$time_scale" -s "$fit_start" $sep_option -L "$log_level" "${files[@]}"
    echo "."
done