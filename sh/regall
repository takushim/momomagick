#!/usr/bin/env bash
set -euo pipefail
source $HOME/.venv/gpu/bin/activate

first_view_x=370
second_view_x=1400
log_level='INFO'
keyword='fix100ms'
regmethod='POC'
deconv=0
dry_run=0

# show usage and exit
function show_usage () {
    echo "$(basename "$0") [-f X1] [-s X2] [-d] [-D] [-e REG] keyword"
    echo "Default settings:"
    echo "- first_view_x: ${first_view_x}"
    echo "- second_view_x: ${second_view_x}"
    echo "** Use -f 370 -s 1520 for old images. **"
    exit 1
}

# parse options
while getopts "f:s:L:e:dD" OPT;
do
    case "$OPT" in
    f) first_view_x="$OPTARG" ;;
    s) second_view_x="$OPTARG" ;;
    d) deconv=1 ;;
    e) regmethod="$OPTARG" ;;
    D) dry_run=1 ;;
    L) log_level="$OPTARG" ;;
    :) show_usage ;;
    \?) show_usage ;;
    esac
done
shift $((OPTIND - 1))

# find folders using the keyword
if [[ $# > 0 ]]; then
    keyword="$1"
fi
glob="*${keyword}*"
readarray -t folders < <(find . -type d -iname "$glob")
current="$(pwd)"

for folder in "${folders[@]}"
do
    echo "***** ${folder} *****"
    if [[ $dry_run == 0 ]]; then
        cd "$current"
        cd "$folder"
        if [[ $(regcrop -e "${regmethod}" -f "${first_view_x}" -s "${second_view_x}" -L "${log_level}") -ne "0" ]]; then
            echo "Error while handling: ${folder}"
        fi
        if [[ $deconv == 1 ]]; then
            if [[ $(deconv -L "${log_level}") -ne "0" ]]; then
                echo "Error while handling: ${folder}"
            fi
        fi
        echo "."
    fi
done
