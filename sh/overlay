#!/usr/bin/env bash
set -euo pipefail
source $HOME/.venv/gpu/bin/activate

shift_x=0
shift_y=0
shift_z=0
file_over=""
file_sweep=""
reg_method="Rigid"
option_trunc=""

# show usage and exit
function show_usage () {
    echo "$(basename "$0") [-x SHIFT_X] [-y SHIFT_Y] [-z SHIFT_Z] [-m REG_METHOD] [-f crop|fusion|(filename)] [-s FILE_SWEEP] [-t] FILE_BACK"
    exit 1
}

# parse options
while getopts "x:y:z:m:f:s:t" OPT;
do
    case "$OPT" in
    x) shift_x="$OPTARG" ;;
    y) shift_y="$OPTARG" ;;
    z) shift_z="$OPTARG" ;;
    m) reg_method="${OPTARG,,}" ;;
    f) file_over="$OPTARG" ;;
    s) file_sweep="$OPTARG" ;;
    t) option_trunc="-n" ;;
    :) show_usage ;;
    \?) show_usage ;;
    esac
done
shift $((OPTIND - 1))

# find the overlay image if not specified
if [[ "$file_over" == "" ]]; then
    file_over="$(find . -maxdepth 1 -iname '*EGFP*MMStack_Pos0_crop_0.tif' | head -n 1)"
    if [[ "$file_over" == "" ]]; then
        file_over="$(find . -maxdepth 1 -iname '*EGFP*MMStack_Pos0_fusion_?.tif' | head -n 1)"
    fi
elif [[ "${file_over,,}" == "fusion" ]]; then
    file_over="$(find . -maxdepth 1 -iname '*EGFP*MMStack_Pos0_fusion_?.tif' | head -n 1)"
elif [[ "${file_over,,}" == "crop" ]]; then
    file_over="$(find . -maxdepth 1 -iname '*EGFP*MMStack_Pos0_crop_0.tif' | head -n 1)"
else
    echo "Invalid file name."
    exit 1
fi

# find the overlay (sweeping) image if not specified
if [[ "$file_sweep" == "" ]]; then
    file_sweep="$(find . -maxdepth 1 -iname '*MMStack_Pos0_drift_crop_0.tif' | head -n 1)"
fi

# find the background image if not specified
if [[ "$#" == 0 ]]; then
    file_back="$(find . -maxdepth 1 -iname '*MMStack_Pos0_drift_crop_1.tif' | head -n 1)"
elif [[ "$#" == 1 ]]; then
    file_back="$@"
else
    echo "More than one background files are specified."
    exit 1
fi

# getting stems
if [[ "$file_back" =~ '.ome.tif' ]]; then
    stem_back="$(echo ${file_back} | sed 's/\.ome\.tif$//')"
elif [[ "$file_back" =~ '.tif' ]]; then
    stem_back="$(echo ${file_back} | sed 's/\.tif$//')"
else
    echo "Not an image file: ${file_back}"
fi

if [[ "$file_over" =~ '.ome.tif' ]]; then
    stem_over="$(echo ${file_over} | sed 's/\.ome\.tif$//')"
elif [[ "$file_over" =~ '.tif' ]]; then
    stem_over="$(echo ${file_over} | sed 's/\.tif$//')"
else
    echo "Not an image file: ${file_over}"
fi

if [[ "$file_sweep" =~ '.ome.tif' ]]; then
    stem_sweep="$(echo ${file_sweep} | sed 's/\.ome\.tif$//')"
elif [[ "$file_over" =~ '.tif' ]]; then
    stem_sweep="$(echo ${file_sweep} | sed 's/\.tif$//')"
else
    echo "Not an image file: ${file_sweep}"
fi

# process!
output_temp="${stem_over}_temp.tif"
output_sweep="${stem_sweep}_${reg_method,,}_sweep.tif"
output_over="${stem_back}_${reg_method,,}_over.tif"
output_final="${stem_back}_${reg_method,,}_over_final.tif"
output_log="${stem_back}_log.txt"

echo "Overlay:" $(date) > $output_log
echo "Dropping unused channels from the EGFP file" >> $output_log
mmcrop.py -o "$output_temp" -c 0 "$file_over"

echo "----------"
echo "Overlaying EGFP on crop_0, method: ${reg_method,,}" >> $output_log
mmoverlay.py -g 0 -o "$output_sweep" -c 0 0 -e "${reg_method}" $option_trunc "$output_temp" "$file_sweep"

echo "----------"
echo "Overlaying crop_1 on crop_0, Shift X-Y-Z: $shift_x $shift_y $shift_z" >> $output_log
mmoverlay.py -g 0 -o "$output_over" -s "$shift_x" "$shift_y" "$shift_z" -e None $option_trunc "$output_sweep" "$file_back"

echo "----------"
echo "Dropping the channel used for registration" >> $output_log
mmcrop.py -o "$output_final" -c -1 "$output_over"
